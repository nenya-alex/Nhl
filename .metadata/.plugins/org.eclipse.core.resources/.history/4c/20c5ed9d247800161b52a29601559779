package ua.nenya.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import ua.nenya.dao.ReadTeamGamesDAO;
import ua.nenya.domain.Game;
import ua.nenya.util.ConnectionManager;

@Repository
public class ReadTeamGamesDAOImpl implements ReadTeamGamesDAO {
	
	@Autowired
	private DataSource dataSource;

	@Override
	public List<Game> readTeam(String teamName, LocalDate date) {
		ConnectionManager connectionManager = new ConnectionManager();
		List<Game> games = new ArrayList<>();
		Connection connection;
		try {
			connection = connectionManager.getConnection();
			Statement statement = connection.createStatement();
			ResultSet resultSet = statement.executeQuery("TODO");
			//TODO
			statement.close();
			connection.close();
			connectionManager.closeConnection();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return games;
	}

	@Override
	public Game readGame(long id) {
		Game game = new Game();
		try (Connection connection = dataSource.getConnection();
				PreparedStatement statement = connection.prepareStatement("SELECT home_team, guest_team FROM nhl2015 WHERE id=?")) {
			statement.setLong(1, id);; 
			ResultSet set = statement.executeQuery();
			set.next();
			game.setId(id);
			game.setHomeTeam(set.getString("home_team"));
			game.setGuestTeam(set.getString("guest_team"));
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return game;
	}

}
